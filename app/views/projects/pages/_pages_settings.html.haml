= form_for @project, url: project_pages_path(@project), html: { class: 'inline', title: pages_https_only_title } do |f|
  - if can?(current_user, :update_max_pages_size)
    = render_if_exists 'shared/pages/max_pages_size_input', form: f
    .gl-mt-3
      = f.submit s_('GitLabPages|Save changes'), class: 'btn btn-confirm gl-button'

  - if Gitlab.config.pages.external_http || Gitlab.config.pages.external_https

    .form-group
      .form-check
        = f.check_box :pages_https_only, class: 'form-check-input', disabled: pages_https_only_disabled?
        = f.label :pages_https_only, class: pages_https_only_label_class do
          %strong
            = s_('GitLabPages|Force HTTPS (requires valid certificates)')
        - docs_link_start = "<a href='#{help_page_path('user/project/pages/custom_domains_ssl_tls_certification/index', anchor: 'force-https-for-gitlab-pages-websites')}' target='_blank' rel='noopener noreferrer'>".html_safe
        - link_end = '</a>'.html_safe
        %p
          = s_("GitLabPages|When enabled, all attempts to visit your website through HTTP are automatically redirected to HTTPS using a response with status code 301. Requires a valid certificate for all domains. %{docs_link_start}Learn more.%{link_end}").html_safe % { docs_link_start: docs_link_start, link_end: link_end }

    .gl-mt-3
      = f.submit s_('GitLabPages|Save changes'), class: 'btn btn-confirm gl-button'
