{"version":3,"sources":["../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/mapping-list.js","../node_modules/source-map/lib/source-map-generator.js","../node_modules/source-map/lib/binary-search.js","../node_modules/source-map/lib/quick-sort.js","../node_modules/source-map/lib/source-map-consumer.js","../node_modules/source-map/lib/source-node.js","../node_modules/source-map/source-map.js"],"names":["intToCharMap","split","exports","encode","number","length","TypeError","decode","charCode","bigA","base64","require","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","encoded","digit","vlq","aStr","aIndex","aOutParam","strLen","continuation","result","shift","Error","charCodeAt","charAt","value","rest","getArg","aArgs","aName","aDefaultValue","arguments","urlRegexp","dataUrlRegexp","urlParse","aUrl","match","scheme","auth","host","port","path","urlGenerate","aParsedUrl","url","normalize","aPath","isAbsolute","part","parts","up","i","splice","join","aRoot","aPathUrl","aRootUrl","joined","replace","relative","level","indexOf","index","lastIndexOf","slice","Array","substr","test","supportsNullProto","Object","create","identity","s","toSetString","isProtoString","fromSetString","compareByOriginalPositions","mappingA","mappingB","onlyCompareOriginal","cmp","strcmp","source","originalLine","originalColumn","generatedColumn","generatedLine","name","compareByGeneratedPositionsDeflated","onlyCompareGenerated","aStr1","aStr2","compareByGeneratedPositionsInflated","parseSourceMapInput","str","JSON","parse","computeSourceURL","sourceRoot","sourceURL","sourceMapURL","parsed","substring","util","has","prototype","hasOwnProperty","hasNativeMap","Map","ArraySet","_array","_set","fromArray","aArray","aAllowDuplicates","set","len","add","size","getOwnPropertyNames","sStr","isDuplicate","call","idx","push","get","at","aIdx","toArray","generatedPositionAfter","lineA","lineB","columnA","columnB","MappingList","_sorted","_last","unsortedForEach","aCallback","aThisArg","forEach","aMapping","sort","base64VLQ","SourceMapGenerator","_file","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","_version","fromSourceMap","aSourceMapConsumer","generator","file","eachMapping","mapping","newMapping","generated","line","column","original","addMapping","sources","sourceFile","sourceRelative","content","sourceContentFor","setSourceContent","_validateMapping","String","aSourceFile","aSourceContent","keys","applySourceMap","aSourceMapPath","newSources","newNames","originalPositionFor","aGenerated","aOriginal","aSource","stringify","_serializeMappings","previousGeneratedColumn","next","nameIdx","sourceIdx","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","mappings","_generateSourcesContent","aSources","aSourceRoot","map","key","toJSON","version","names","sourcesContent","toString","recursiveSearch","aLow","aHigh","aNeedle","aHaystack","aCompare","aBias","mid","Math","floor","LEAST_UPPER_BOUND","GREATEST_LOWER_BOUND","search","swap","ary","x","y","temp","randomIntInRange","low","high","round","random","doQuickSort","comparator","p","r","pivotIndex","pivot","j","q","quickSort","binarySearch","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","_absoluteSources","_sourceMapURL","Mapping","lastOffset","_sections","offset","offsetLine","offsetColumn","generatedOffset","consumer","__generatedMappings","defineProperty","configurable","enumerable","_parseMappings","__originalMappings","_charIsMappingSeparator","c","GENERATED_ORDER","ORIGINAL_ORDER","aContext","aOrder","context","order","_generatedMappings","_originalMappings","allGeneratedPositionsFor","needle","_findSourceIndex","_findMapping","undefined","lastColumn","relativeSource","smc","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","segment","end","cachedSegments","originalMappings","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","hasContentsOfAllSources","some","sc","nullOnMissing","fileUriAbsPath","generatedPositionFor","constructor","sectionIndex","section","bias","every","generatedPosition","ret","sectionMappings","adjustedMapping","REGEX_NEWLINE","NEWLINE_CODE","isSourceNode","SourceNode","aLine","aColumn","aChunks","children","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","node","remainingLines","remainingLinesIndex","shiftNextLine","lineContents","getNextLine","lastGeneratedLine","lastMapping","nextLine","code","addMappingWithCode","aChunk","isArray","chunk","prepend","unshift","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent"],"mappings":"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","file":"source-map.438fa06b.js","sourceRoot":"../../assets","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n"]}