- user = spam_log.user
%tr
  %td
    = time_ago_with_tooltip(spam_log.created_at)
  %td
    - if user
      = link_to user.name, [:admin, user]
      .light.small
        = _('Joined %{user_created_time}').html_safe % { user_created_time: time_ago_with_tooltip(user.created_at) }
    - else
      = _('(removed)')
  %td
    = spam_log.source_ip
  %td
    = spam_log.via_api? ? 'Y' : 'N'
  %td
    = spam_log.recaptcha_verified ? 'Y' : 'N'
  %td
    = spam_log.noteable_type
  %td
    = spam_log.title
  %td
    = truncate(spam_log.description, length: 100)
  %td
    - if user
      = link_to _('Remove user'), admin_spam_log_path(spam_log, remove_user: true),
        data: { confirm: _("USER %{user_name} WILL BE REMOVED! Are you sure?") % { user_name: user.name } }, method: :delete, class: "gl-button btn btn-sm btn-danger"
  %td
    - if spam_log.submitted_as_ham?
      .gl-button.btn.btn-default.btn-sm.disabled.gl-mb-3
        = _("Submitted as ham")
    - else
      = link_to _('Submit as ham'), mark_as_ham_admin_spam_log_path(spam_log), method: :post, class: 'gl-button btn btn-default btn-sm gl-mb-3'
    - if user && !user.blocked?
      = link_to _('Block user'), block_admin_user_path(user), data: {confirm: _('USER WILL BE BLOCKED! Are you sure?')}, method: :put, class: "gl-button btn btn-default btn-sm gl-mb-3"
    - else
      .gl-button.btn.btn-default.btn-sm.disabled.gl-mb-3
        Already blocked
    = link_to _('Remove log'), [:admin, spam_log], remote: true, method: :delete, class: "gl-button btn btn-default btn-sm btn-close js-remove-tr"
