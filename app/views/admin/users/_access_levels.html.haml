%fieldset
  %legend
    = s_('AdminUsers|Access')
  .form-group.row
    .col-sm-2.col-form-label
      = f.label :projects_limit
    .col-sm-10
      = f.number_field :projects_limit, min: 0, max: Gitlab::Database::MAX_INT_VALUE, class: 'form-control gl-form-input'

  .form-group.row
    .col-sm-2.col-form-label.gl-pt-0
      = f.label :can_create_group
    .col-sm-10
      = f.check_box :can_create_group

  .form-group.row
    .col-sm-2.col-form-label.gl-pt-0
      = f.label :access_level
    .col-sm-10
      - editing_current_user = (current_user == @user)

      = f.gitlab_ui_radio_component :access_level, :regular,
          s_('AdminUsers|Regular'),
          radio_options: { disabled: editing_current_user },
          help_text: s_('AdminUsers|Regular users have access to their groups and projects.')

      = render_if_exists 'admin/users/auditor_access_level_radio', f: f, disabled: editing_current_user

      - help_text = s_('AdminUsers|Administrators have access to all groups, projects and users and can manage all features in this installation.')
      - help_text += ' ' + s_('AdminUsers|You cannot remove your own admin rights.') if editing_current_user
      = f.gitlab_ui_radio_component :access_level, :admin,
          s_('AdminUsers|Admin'),
          radio_options: { disabled: editing_current_user },
          help_text: help_text


  .form-group.row
    .col-sm-2.col-form-label.gl-pt-0
      = f.label :external
    .hidden{ data: user_internal_regex_data }
    .col-sm-10.gl-display-flex.gl-align-items-baseline
      = f.check_box :external do
        = s_('AdminUsers|External')
      %p.light.gl-pl-2
        = s_('AdminUsers|External users cannot see internal or private projects unless access is explicitly granted. Also, external users cannot create projects, groups, or personal snippets.')
      %row.hidden#warning_external_automatically_set
        = gl_badge_tag s_('AdminUsers|Automatically marked as default internal user'), variant: :warning

  .form-group.row
    - @user.credit_card_validation || @user.build_credit_card_validation
    = f.fields_for :credit_card_validation do |ff|
      .col-sm-2.col-form-label.gl-pt-0
        = ff.label s_("AdminUsers|Validate user account")
      .col-sm-10.gl-display-flex.gl-align-items-baseline
        = ff.check_box :credit_card_validated_at, checked: @user.credit_card_validated_at.present?
        .gl-pl-2
          .light
            = s_('AdminUsers|User is validated and can use free CI minutes on shared runners.')
          .gl-text-gray-600
            = s_('AdminUsers|A user can validate themselves by inputting a credit/debit card, or an admin can manually validate a user.')

