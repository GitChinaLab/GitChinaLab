%li{ id: dom_id(merge_request), class: mr_css_classes(merge_request), data: { labels: merge_request.label_ids, id: merge_request.id } }
  - if @can_bulk_update
    .issue-check.hidden
      - checkbox_id = dom_id(merge_request, "selected")
      %label.gl-sr-only{ for: checkbox_id }= merge_request.title
      = check_box_tag checkbox_id, nil, false, 'data-id' => merge_request.id, class: "selected-issuable"

  .issuable-info-container
    .issuable-main-info
      .merge-request-title.title
        %span.merge-request-title-text.js-onboarding-mr-item
          = link_to merge_request.title, merge_request_path(merge_request), class: 'js-prefetch-document'
        - if merge_request.tasks?
          %span.task-status.d-none.d-sm-inline-block
            &nbsp;
            = merge_request.task_status

      .issuable-info
        %span.issuable-reference
          #{issuable_reference(merge_request)}
        %span.issuable-authored.d-none.d-sm-inline-block
          &middot;
          #{s_('IssueList|created %{timeAgoString} by %{user}').html_safe % { timeAgoString: time_ago_with_tooltip(merge_request.created_at, placement: 'bottom'), user: link_to_member(@project, merge_request.author, avatar: false) }}
          = render_if_exists 'shared/issuable/gitlab_team_member_badge', author: merge_request.author
        - if merge_request.milestone
          %span.issuable-milestone.d-none.d-sm-inline-block
            &nbsp;
            = link_to project_merge_requests_path(merge_request.project, milestone_title: merge_request.milestone.title), data: { html: 'true', toggle: 'tooltip', title: milestone_tooltip_due_date(merge_request.milestone) } do
              = sprite_icon('clock', css_class: 'gl-vertical-align-text-bottom')
              = merge_request.milestone.title
        - if merge_request.target_project.default_branch != merge_request.target_branch
          %span.project-ref-path.has-tooltip{ title: _('Target branch') }
            &nbsp;
            = link_to project_ref_path(merge_request.project, merge_request.target_branch), class: 'ref-name' do
              = sprite_icon('branch', size: 12, css_class: 'fork-sprite')
              = merge_request.target_branch
        - if merge_request.labels.any?
          &nbsp;
          - presented_labels_sorted_by_title(merge_request.labels, merge_request.project).each do |label|
            = link_to_label(label, type: :merge_request, small: true)

    .issuable-meta
      %ul.controls.d-flex.align-items-end
        - if merge_request.merged?
          %li.issuable-status.d-none.d-sm-inline-block
            = _('MERGED')
        - elsif merge_request.closed?
          %li.issuable-status.d-none.d-sm-inline-block
            = sprite_icon('cancel', css_class: 'gl-vertical-align-text-bottom')
            = _('CLOSED')
        = render 'shared/merge_request_pipeline_status', merge_request: merge_request
        - if merge_request.open? && merge_request.broken?
          %li.issuable-pipeline-broken.d-none.d-sm-flex
            = link_to merge_request_path(merge_request), class: "has-tooltip", title: _('Cannot be merged automatically') do
              = sprite_icon('warning-solid')
        - if merge_request.assignees.any?
          %li.gl-display-flex.gl-align-items-center
            = render 'shared/issuable/assignees', project: merge_request.project, issuable: merge_request
        - if merge_request.reviewers.any?
          %li.gl-display-flex.issuable-reviewers
            = render 'shared/issuable/reviewers', project: merge_request.project, issuable: merge_request
        = render 'projects/merge_requests/approvals_count', merge_request: merge_request

        = render 'shared/issuable_meta_data', issuable: merge_request

      .float-right.issuable-updated-at.d-none.d-sm-inline-block
        %span
          = _('updated %{time_ago}').html_safe % { time_ago: time_ago_with_tooltip(merge_request.updated_at, placement: 'bottom', html_class: 'merge_request_updated_ago') }
